@model ReimbursementProject.Models.EmployeeDetails
@{
    ViewData["Title"] = "Register";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header bg-gradient bg-success text-white text-center rounded-top-4">
                    <h4 class="mb-0"><i class="fas fa-user-plus"></i> Employee Registration</h4>
                </div>

                <div class="card-body p-4">
                    <!-- Global Alert -->
                    <div id="registerAlert" class="alert d-none alert-dismissible fade show" role="alert">
                        <span id="registerAlertMessage"></span>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>

                    <form id="registerForm" novalidate>
                        <!-- Employee ID + Name -->
                        <div class="row">
                            <div class="col-md-6 mb-3 position-relative">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-id-badge"></i> Employee ID
                                </label>
                                <input type="text" id="EmpID" class="form-control rounded-pill" placeholder="Enter Employee ID" required />
                                <div class="invalid-feedback" id="EmpIDError"></div>
                            </div>

                            <div class="col-md-6 mb-3 position-relative">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-user"></i> Name
                                </label>
                                <input type="text" id="EmpName" class="form-control rounded-pill" placeholder="Enter Name" required />
                                <div class="invalid-feedback" id="EmpNameError"></div>
                            </div>
                        </div>

                        <!-- Designation + Department -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-briefcase"></i> Designation
                                </label>
                                <input type="text" id="Designation" class="form-control rounded-pill" placeholder="Enter Designation" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-semibold">
                                    <i class="fas fa-building-columns"></i> Department
                                </label>
                                <input type="text" id="Dept" class="form-control rounded-pill" placeholder="Enter Department" />
                            </div>
                        </div>

                        <!-- Password + Confirm Password -->
                        <div class="row">
                            <div class="col-md-6 mb-3 position-relative">
                                <label class="form-label fw-semibold"><i class="fas fa-lock"></i> Password</label>
                                <div class="input-group">
                                    <input type="password" id="Password" class="form-control rounded-start-pill" placeholder="Enter Password" required />
                                    <button class="btn btn-outline-secondary rounded-end-pill" type="button" id="togglePassword">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="invalid-feedback" id="PasswordError"></div>
                            </div>

                            <div class="col-md-6 mb-3 position-relative">
                                <label class="form-label fw-semibold"><i class="fas fa-lock"></i> Confirm Password</label>
                                <div class="input-group">
                                    <input type="password" id="ConfirmPassword" class="form-control rounded-start-pill" placeholder="Confirm Password" required />
                                    <button class="btn btn-outline-secondary rounded-end-pill" type="button" id="toggleConfirmPassword">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="invalid-feedback" id="ConfirmPasswordError"></div>
                            </div>
                        </div>

                        <!-- Register Button -->
                        <div class="d-grid mt-4">
                            <button type="submit" id="registerBtn" class="btn btn-success rounded-pill py-2 fw-semibold" disabled>
                                <i class="fas fa-paper-plane"></i> Register
                            </button>
                            <small id="formHint" class="text-danger text-center mt-2 d-none">Please fill all required fields correctly.</small>
                        </div>
                    </form>

                    <div class="text-center mt-3">
                        <a class="btn btn-outline-secondary rounded-pill px-4" asp-controller="Home" asp-action="Login">
                            <i class="fas fa-sign-in-alt"></i> Back to Login
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showAlert(message, type) {
            const alertBox = $("#registerAlert");
            const alertMessage = $("#registerAlertMessage");

            alertBox.removeClass("d-none alert-success alert-danger alert-warning");
            alertBox.addClass("alert-" + type);
            alertMessage.text(message);

            // Show the alert
            alertBox.addClass("show");

            // Scroll to top smoothly
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        $(function () {
            const empIdInput = $("#EmpID");
            const empNameInput = $("#EmpName");
            const passwordInput = $("#Password");
            const confirmPasswordInput = $("#ConfirmPassword");
            const registerBtn = $("#registerBtn");
            const formHint = $("#formHint");

            // 🔒 Initially disable the register button
            registerBtn.prop("disabled", true);

            // 🧠 Check all input conditions
            function checkForm() {
                const empId = empIdInput.val().trim();
                const empName = empNameInput.val().trim();
                const password = passwordInput.val().trim();
                const confirmPassword = confirmPasswordInput.val().trim();

                const allFilled = empId && empName && password && confirmPassword;
                const passwordsMatch = password === confirmPassword;

                if (allFilled && passwordsMatch) {
                    registerBtn.prop("disabled", false);
                    formHint.addClass("d-none");
                } else {
                    registerBtn.prop("disabled", true);
                    formHint.removeClass("d-none");
                }
            }

            // 🔁 Monitor input fields
            $("#EmpID, #EmpName, #Password, #ConfirmPassword").on("input", checkForm);

            // 👁️ Toggle Password Visibility
            $("#togglePassword").click(function () {
                const input = $("#Password");
                const icon = $(this).find("i");
                const type = input.attr("type") === "password" ? "text" : "password";
                input.attr("type", type);
                icon.toggleClass("fa-eye fa-eye-slash");
            });

            $("#toggleConfirmPassword").click(function () {
                const input = $("#ConfirmPassword");
                const icon = $(this).find("i");
                const type = input.attr("type") === "password" ? "text" : "password";
                input.attr("type", type);
                icon.toggleClass("fa-eye fa-eye-slash");
            });

            // ✅ Register Submit
            $("#registerForm").on("submit", function (e) {
                e.preventDefault();
                $(".invalid-feedback").text("");
                $("input").removeClass("is-invalid");

                const empId = empIdInput.val().trim();
                const empName = empNameInput.val().trim();
                const designation = $("#Designation").val().trim();
                const dept = $("#Dept").val().trim();
                const password = passwordInput.val().trim();
                const confirmPassword = confirmPasswordInput.val().trim();

                let valid = true;

                if (!empId.startsWith("PMA")) {
                    $("#EmpIDError").text("Employee ID must start with 'PMA'.");
                    empIdInput.addClass("is-invalid");
                    valid = false;
                }

                if (password !== confirmPassword) {
                    $("#ConfirmPasswordError").text("Passwords do not match.");
                    confirmPasswordInput.addClass("is-invalid");
                    valid = false;
                }

                if (!valid) return;

                $.ajax({
                    url: "/api/Employee/Register",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        EmpID: empId,
                        EmpName: empName,
                        Designation: designation,
                        Dept: dept,
                        Password: password
                    }),
                    success: function (res) {
                        showAlert(res.message || "Registration successful.", "success");
                        $("#registerForm")[0].reset();
                        registerBtn.prop("disabled", true);
                        formHint.removeClass("d-none");
                    },
                    error: function (xhr) {
                        showAlert(xhr.responseJSON?.message || "Error occurred while registering.", "danger");
                    }
                });
            });
        });
    </script>
}

<style>
    #registerBtn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
</style>
